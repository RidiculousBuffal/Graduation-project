name: Sync Gitee to GitHub

on:
  schedule:
    - cron: '0 */8 * * *' # 每8小时触发一次
  workflow_dispatch: # 手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 确保 GITHUB_TOKEN 有写入权限

    steps:
      # 1. 配置 SSH 拉取 Gitee 仓库
      - name: Setup SSH for Gitee
        run: |
          mkdir -p ~/.ssh
          if [ -z "${{ secrets.GITEE_SSH_KEY }}" ]; then
            echo "Error: GITEE_SSH_KEY is empty!"
            exit 1
          else
            echo "${{ secrets.GITEE_SSH_KEY }}" > ~/.ssh/id_rsa
          fi
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan gitee.com >> ~/.ssh/known_hosts
        continue-on-error: true

      # 2. 克隆 Gitee 仓库（mirror全分支）
      - name: Clone Gitee Repository
        run: git clone --mirror git@gitee.com:chai-xiaoxiexie/large_passenger_aircraft.git gitee-repo

      # 3. 推送所有分支和标签到 GitHub
      - name: Push Mirror to GitHub
        run: |
          cd gitee-repo
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote add github https://RidiculousBuffal:${{ secrets.PAT_GITHUB_PUSH }}@github.com/RidiculousBuffal/Graduation-project.git
          git push github --all
          git push github --tags
  updateSubModule:
    runs-on: ubuntu-latest
    needs: sync
    permissions:
      contents: write
    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: false
          fetch-depth: 0
          submodules: recursive

      # 5. 拉取和更新 backend 子模块（dev_backend 最新）
      - name: Update backend submodule to latest dev_backend
        run: |
          git submodule update --init --recursive
          cd backend
          git fetch origin dev_backend
          git checkout dev_backend
          git pull origin dev_backend
          cd ..
          git add backend

      # 6. 拉取和更新 frontend 子模块（zlc/pc-frontend 最新）
      - name: Update frontend submodule to latest zlc/pc-frontend
        run: |
          cd frontend
          git fetch origin zlc/pc-frontend
          git checkout zlc/pc-frontend
          git pull origin zlc/pc-frontend
          cd ..
          git add frontend

      # 7. 提交子模块的变动（如果有）
      - name: Commit and push submodule updates
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git commit -m "chore: update submodules to latest commit" || echo "No update"
          git remote set-url origin https://RidiculousBuffal:${{ secrets.PAT_GITHUB_PUSH }}@github.com/RidiculousBuffal/Graduation-project.git
          git push origin main
